class Solution {
public:
    int dp[1005][1005][2];
    ///vector<vector<vector<int>>>dp;
    int solve(int totChar, int prevChar, int op, int n)
    {
        if(totChar == n) return 0;
        if(totChar > n) return 1e7;
        int &ret = dp[totChar][prevChar][op];
        if(ret != -1) return ret;
        if(op){
            prevChar = totChar;
            ret = 1 + solve(totChar, prevChar, op^1, n);
        }
        else{
            ret = min(1 + solve(totChar+prevChar, prevChar, op^1, n), 
                      1 + solve(totChar+prevChar, prevChar, op, n));
        }
        return ret;
    }
    int minSteps(int n) {
        ///dp.resize(n+5, vector<vector<int>>(n+5, vector<int>(2, -1)));
        memset(dp, -1, sizeof dp);
        /// 0 paste
        /// 1 copy
        int Ans = solve(1, 1, 1, n);
        return Ans;
    }
};